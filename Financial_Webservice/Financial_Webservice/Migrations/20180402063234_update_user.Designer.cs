// <auto-generated />
using System;
using Financial_Webservice.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;

namespace Financial_Webservice.Migrations
{
    [DbContext(typeof(FinancialDBContext))]
    [Migration("20180402063234_update_user")]
    partial class update_user
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Financial_Webservice.Entities.Debt", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<DateTime>("date");

                    b.Property<string>("detail");

                    b.Property<bool>("isPositive");

                    b.Property<Guid>("jarID");

                    b.Property<string>("origin")
                        .IsRequired();

                    b.HasKey("_id");

                    b.HasIndex("jarID");

                    b.ToTable("Debts");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.InCome", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<DateTime>("date");

                    b.Property<string>("detail");

                    b.Property<Guid>("jarID");

                    b.HasKey("_id");

                    b.HasIndex("jarID");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.Jar", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("userID");

                    b.HasKey("_id");

                    b.HasIndex("userID");

                    b.ToTable("Jars");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.SpendingDetail", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("amount");

                    b.Property<DateTime>("date");

                    b.Property<string>("detail");

                    b.Property<Guid>("jarID");

                    b.HasKey("_id");

                    b.HasIndex("jarID");

                    b.ToTable("SpendingsDetail");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.State", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("debtID");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("_id");

                    b.HasIndex("debtID")
                        .IsUnique();

                    b.ToTable("States");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.Type", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("jarID");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("_id");

                    b.HasIndex("jarID")
                        .IsUnique();

                    b.ToTable("Types");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.User", b =>
                {
                    b.Property<Guid>("_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("password")
                        .IsRequired();

                    b.Property<string>("phone");

                    b.Property<string>("token");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("_id");

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Financial_Webservice.Entities.Debt", b =>
                {
                    b.HasOne("Financial_Webservice.Entities.Jar", "jar")
                        .WithMany("debts")
                        .HasForeignKey("jarID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Financial_Webservice.Entities.InCome", b =>
                {
                    b.HasOne("Financial_Webservice.Entities.Jar", "jar")
                        .WithMany("incomes")
                        .HasForeignKey("jarID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Financial_Webservice.Entities.Jar", b =>
                {
                    b.HasOne("Financial_Webservice.Entities.User", "user")
                        .WithMany("Jars")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Financial_Webservice.Entities.SpendingDetail", b =>
                {
                    b.HasOne("Financial_Webservice.Entities.Jar", "jar")
                        .WithMany("spendings")
                        .HasForeignKey("jarID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Financial_Webservice.Entities.State", b =>
                {
                    b.HasOne("Financial_Webservice.Entities.Debt", "debt")
                        .WithOne("state")
                        .HasForeignKey("Financial_Webservice.Entities.State", "debtID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Financial_Webservice.Entities.Type", b =>
                {
                    b.HasOne("Financial_Webservice.Entities.Jar", "jar")
                        .WithOne("type")
                        .HasForeignKey("Financial_Webservice.Entities.Type", "jarID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
